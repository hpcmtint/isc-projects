  File:
    type: object
    properties:
      filetype:
        type: string
      filename:
        type: string

  LogTarget:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      name:
        type: string
      severity:
        type: string
      output:
        type: string

  LogTail:
    type: object
    required:
      - logTargetOutput
      - appId
      - appType
      - appName
      - contents
    properties:
      logTargetOutput:
        readOnly: true
        type: string
      machine:
        $ref: '#/definitions/AppMachine'
      appId:
        readOnly: true
        type: integer
      appType:
        readOnly: true
        type: string
      appName:
        readOnly: true
        type: string
      contents:
        readOnly: true
        type: array
        items:
          type: string
      error:
        readOnly: true
        type: string

  NewMachineReq:
    type: object
    required:
      - address
      - agentCSR
      - agentToken
    properties:
      address:
        type: string
      agentPort:
        type: integer
      agentCSR:
        type: string
        description: Agent Certificate Signing Request.
      serverToken:
        type: string
        description: >-
          A token that is issued by the Stork server. It can be taken
          from Machines page. If it is provided then an agent will
          be immediately authorized in the server and will be operational.
          It may be empty.
      agentToken:
        type: string
        description: >-
          A token that is generated by an agent. An agent traces it in
          the logs during startup and stores it in
          /var/lib/stork-agent/tokens/agent-token.txt. A machine added
          this way to the Stork server requires separate authorization
          that can be made in the Stork server UI or using server API.
          It cannot be empty.

  NewMachineResp:
    type: object
    properties:
      id:
        type: integer
        description: The machine ID.
      serverCACert:
        type: string
        readOnly: true
        description: Server's CA certificate.
      agentCert:
        type: string
        readOnly: true
        description: Signed agent's certificate.

  Machine:
    type: object
    required:
      - address
    properties:
      id:
        type: integer
        readOnly: true
      address:
        type: string
      agentPort:
        type: integer
      authorized:
        type: boolean
      agentToken:
        type: string
      agentVersion:
        type: string
        readOnly: true
      hostname:
        type: string
        readOnly: true
      cpus:
        type: integer
        readOnly: true
      cpusLoad:
        type: string
        readOnly: true
      memory:
        type: integer
        readOnly: true
      usedMemory:
        type: integer
        readOnly: true
      uptime:
        type: integer
        readOnly: true
      os:
        type: string
        readOnly: true
      platform:
        type: string
        readOnly: true
      platformFamily:
        type: string
        readOnly: true
      platformVersion:
        type: string
        readOnly: true
      kernelVersion:
        type: string
        readOnly: true
      kernelArch:
        type: string
        readOnly: true
      virtualizationSystem:
        type: string
        readOnly: true
      virtualizationRole:
        type: string
        readOnly: true
      hostID:
        type: string
        readOnly: true
      lastVisitedAt:
        type: string
        format: date-time
        readOnly: true
      error:
        type: string
        readOnly: true
      apps:
        type: array
        items:
          $ref: '#/definitions/App'

  Machines:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/Machine'
      total:
        type: integer

  AppAccessPoint:
     type: object
     properties:
       type:
         type: string
       address:
         type: string
       port:
         type: integer
       key:
         type: string

  App:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      name:
        type: string
      type:
        type: string
      accessPoints:
        type: array
        items:
          $ref: '#/definitions/AppAccessPoint'
      version:
        type: string
      machine:
        $ref: '#/definitions/AppMachine'
      details:
        allOf:
          - $ref: '#/definitions/AppKea'
          - $ref: '#/definitions/AppBind9'

  KeaDaemonDatabase:
    type: object
    properties:
      backendType:
        type: string
      database:
        type: string
      host:
        type: string
      dataTypes:
        type: array
        items:
          type: string

  KeaDaemon:
    type: object
    properties:
      id:
        type: integer
      pid:
        type: integer
      name:
        type: string
      active:
        type: boolean
      monitored:
        type: boolean
      version:
        type: string
      extendedVersion:
        type: string
      uptime:
        type: integer
      reloadedAt:
        type: string
        format: date-time
      hooks:
        type: array
        items:
          type: string
      files:
        type: array
        items:
          $ref: '#/definitions/File'
      backends:
        type: array
        items:
          $ref: '#/definitions/KeaDaemonDatabase'
      agentCommErrors:
        type: integer
      caCommErrors:
        type: integer
      daemonCommErrors:
        type: integer
      logTargets:
        type: array
        items:
          $ref: '#/definitions/LogTarget'

  KeaDaemonConfig:
    type: object
    additionalProperties: true

  AppKea:
    type: object
    properties:
      extendedVersion:
        type: string
      daemons:
        type: array
        items:
          $ref: '#/definitions/KeaDaemon'

  Bind9Daemon:
    type: object
    properties:
      id:
        type: integer
      pid:
        type: integer
      name:
        type: string
      active:
        type: boolean
      monitored:
        type: boolean
      version:
        type: string
      uptime:
        type: integer
      reloadedAt:
        type: string
        format: date-time
      zoneCount:
        type: integer
      autoZoneCount:
        type: integer
      queryHitRatio:
        type: number
      queryHits:
        type: integer
        x-omitempty: false
      queryMisses:
        type: integer
        x-omitempty: false
      agentCommErrors:
        type: integer
      rndcCommErrors:
        type: integer
      statsCommErrors:
        type: integer

  AppBind9:
    type: object
    properties:
      daemon:
        $ref: '#/definitions/Bind9Daemon'

  AppMachine:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      address:
        type: string
      hostname:
        type: string

  Apps:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/App'
      total:
        type: integer

  AppsStats:
    type: object
    properties:
      keaAppsTotal:
        type: integer
      keaAppsNotOk:
        type: integer
      bind9AppsTotal:
        type: integer
      bind9AppsNotOk:
        type: integer

  KeaHAServerStatus:
    type: object
    properties:
      age:
        type: integer
      appId:
        type: integer
      controlAddress:
        type: string
      failoverTime:
        type: string
        format: date-time
      id:
        type: integer
      inTouch:
        type: boolean
      role:
        type: string
      scopes:
        type: array
        items:
          type: string
      state:
        type: string
      statusTime:
        type: string
        format: date-time
      commInterrupted:
        type: integer
      connectingClients:
        type: integer
      unackedClients:
        type: integer
      unackedClientsLeft:
        type: integer
      analyzedPackets:
        type: integer

  KeaStatus:
    type: object
    properties:
      daemon:
        type: string
      haServers:
        type: object
        properties:
          primaryServer:
            $ref: '#/definitions/KeaHAServerStatus'
          secondaryServer:
            $ref: '#/definitions/KeaHAServerStatus'

  ServiceStatus:
    type: object
    properties:
      status:
        allOf:
          - $ref: '#/definitions/KeaStatus'

  ServicesStatus:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ServiceStatus'
